import json
from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer
from sklearn.svm import LinearSVC
from sklearn.pipeline import Pipeline
from sklearn.metrics import accuracy_score


def read_file(fn):
    return open(fn, 'r').readlines()

def read_json_file(fn):
    return [json.loads(line) for line in read_file(fn)[1:]]

def features(d):
    return d['heading'] + d['section']

def training_data():
    data = read_json_file('training.json')
    words = [features(d) for d in data]
    classification = [d['category'] for d in data]
    return words, classification

def get_model():
    words, classification = training_data()
    pipe = Pipeline([('vect', CountVectorizer()), ('tfidf', TfidfTransformer()), ('clf', LinearSVC())])
    return pipe.fit(words, classification)

def run():
    data = [json.loads(input()) for _ in range(int(input()))]
    model = get_model()
    words = [features(d) for d in data]
    predictions = model.predict(words)
    print(*predictions, sep='\n')

import zlib

def test_0():
    d = {'a': 'activities', 'b': 'appliances', 'c': 'artists', 'd': 'automotive', 'e': 'cell-phones', 'f': 'childcare', 'g': 'general', 'h': 'household-services', 'i': 'housing', 'j': 'photography', 'k': 'real-estate', 'l': 'shared', 'm': 'temporary', 'n': 'therapeutic', 'o': 'video-games', 'p': 'wanted-housing'}
    a0='opolnobnncegplpedefhfbidnlnpbpflfkfmpgbdfhngeopfkeckjbcmmnmbekoggjllkobnlmbnfbkblnelhelijkefplellehilnnhnehhkbnenklmkkpjlmngbndlmneghpgkomejdhbhhpnbpemegnnecmnmlmphjplomhalldpfeegdopcbncngipckhfdjdnjgcopnbfeenmdpmlknlendfpjkijhepdlflnjmkhahpgbjjlhifkeehfebiipnhbeeblgbfajmlcdjnjidpbiodldnfegilmfgjjhkojaeegkpfelkifnoioockglbnpkobakkeelplnbfofcjnlfnlmnfmpkcdpdpenjlmllnmeehclefelbgnmoelkelfjenplfmjemnnpkmklocoofnhkbpdppeelmpfebhnohgnpmbelhhhnlmfdmjolgdfjiddpljmooepclbloonnnjjnonflhpblkpmhemhdajgdlkfnhlbldnmjmgcnjmhmlmmjobpcnogelbgmeeoafneofnppdlpbelbmnhopbjhjjjihpjnhkpdelgkjompppoelbdmcnbencbnpmfbmfddnjnmfbogjfmlhbfdfhopmlenmbjnmhbhpdeadlonfkepmmjhhohopoljiebhepfjehdhlndbhenmdjneonjelooellggflfpgcojglhpdplnakfklebeedeibnblpbkbhjldodplkfeolbfpfhlkmlbjhglnoncennffnedgkebmphkeedenlbklohekgellhmlfhnokhohponmjlknfbnddbljmmadlmbjceklglomhdlhlomkjfpklnppbldhlmhpehnfeoonnkblcfmlhefofpjheijldjdgjifjlhdmofnlibfpeleeolkenhdpkdflllhbklpenlgdjoefeldbbljdajkefnjgpffglbbmhklblbbdbheglenfmbhemmjhnocfkloeollnmmemkjkogfomflhefjdglobpfhnnpmkfldlnojgghjomnbellhcnfnonpogfphbemondnkonbfoljfegpepnmpmolnkfembmplpjmnmdolejajlpnpmdmnjneemjbcfdpaoofldlbbjloeljolhnpkdmhlgljjbjejjlncmheilipmnklejonmnnbmljdllbljkelggdlmbenplmoihfbgepegdpodllnlgnpdokopbeklffpfnnpdpinlljbncjdnhklehdnjcllednoldofmeffojnefbbepmjblplhkpipfllodnmlhnnnldnpdbjjpmllmfpdbgbdlbfjgojlfejoegkkmmmfefplfcejllaknllldlgnlnhmkkllbdlojchmelnmllbnldihpfodlpmfnohddoblfbnknellpgedpfkokblahlndeonchnjflpnbpaegellnghlbbnemhmlenhjllmelobilghnlbmkfknkdehfbomjdboimflnnmgmhmfpndehmninnjfaljokijolndlpbjhgndnehdbnlblfelmfelnahlmhdpoemncdoahfjnjdijgjkghcjjmgjbbblljlhjlmmhkcbjbbelknddoblnfjdmjkefdlbggjlojelnononeefomppefgldbnlbbpbfddepfldnoholpdmdnbmaeljpknfahjlanhnnknpbjnmgahaljdljdmjjellnbelmpfklcldbbjbncjnpecnednofjdhjdidpbojjepnanlehhpgldbkomdmhnpbeppbdbiboimhhobmdfpdkolpdlollekplkngfpmdgknnmfbmpejgbpjffceclmdeehldnkhhdnbnnlnododngnlnfhjaibhhlfbgblfhbjeefhldnbmmfgnlphenflhnlnpjpmdffngeilaknhjllpfnfcgkhllghhphhonplfpllnbnkngnhlbhlkgclbjmklgiepbomglekjnognhmgobebgpnneppeekfhogbelbelnpaohojfdbopkimdhnknconepmfflfmdhlelhkehblomdmpnkebojdmgfhlcnmgeppobggffkgjfnopnjbgaeonfgmelmmjlmenokpebeeeknbfljfjnphglpbblendjemmmenlcnbaenehhkgmhpclnlehbkcoognnjeofehneonfgdpebpnnofpkljhgnnhnogdhklemmhinofplnjjhonllbmplpcoecnnmbndmclnlgbmnnphofkeipcblhpljojofoceobgefoolaeblokecblgbolehkbdelbfbnllempneffebnnigcelknipmnmmnbdlaogfhhpebmkfeleplfpebdhlnfpgjbokjoblfnlbojegdmjaeppbnoeejnjgmgonlmlebmlkpkmbfmaklfknldendbdlmkejolngpbkeepaebedindkenbbfodlkjffjdmaphkldppoljfeldinjnfapkhnigjkmemmfmlkjmfinbohnilljnnfhebemeelbpmbfnjgjapbehldknnejfemlcndnmfnmbnlpdnldlnnflbilkhcjhpnioepodjeldepdonlkgjolfbgcbfnjebnopelfbgefngjbfmofkknbjfcjehbdnllkjgddhmimdbhhplnfjbkebdaehobpeeghpflabgkkhhngehnmfehhjceoofplnhkeheglllpeppalkecejnlinoenlljpfnmhopebbpecoffbnneddlljamilmebfencoedokbhmblhnmbbpemfmpejemnbbhpmklnjkofelepnplfmlnnlnjghhjhoegljppehblenifpjebppfgenmmognpeojnjgekdfdmjamfjeehejpdmpekghdkebfmjmheonojaeeenmpijejeldhebomfbpallmanlppbmpnnbnlmfpklmnemfbjfjopnenbomldpkalkkldffehplhleibeheodenelinhlgbnbplmpjlonljpoeglbmoljmldgldhokenelmopfmnbjlmncpfngiooloepinagkopgghdhgcjjlgfmlmbdekdnphbmnmkhekolaepenejbkcnihbhblljfhnpokkhcbhhnlchlpenfjoopjakfenkjfpfnolmoegfknpeoblkbdnkjlnbmfjojeoehllmbgafhpdllljkbjhodlojmodhjkegjnednihmfdmlnnhoinojpdgnoooofogpnkblkmomhdjklkfnnnmnlpakmflbflpjkimielhakfeobcebnchbeopojdgffopooepgjlhbejbddmmjlengdjklecbmmflklbhdgmmffjmgbnmnjomalmnjhdflpddmhpmpfhodjcelnjofmddbccmlkccnnejbbknkeippmnmnlfdmmoapahdnpelbpeefppbedhllmhhpbnmkekonplacejjldblfjkpffpfglbogfpjjindbkoflpednfhhldllfdlngojljmljkhmgkodggmlejonolhgnegnlebcodhdbedmfnpkkgijchhpofcgpmmlckollleomnkllfhjnlmglllhjgbbcllkogipfejfjifhbmlmolncboeeoldeogaklmfdecmjeoellkloggnlllpcehhhlbbnoldelhmnbpdbkpfggklflmdlcmnblghfpjeebmnaejjnfjnoofjecmpffgojbbglilmpdepmepbphoolgmoncoplnlkenhlcnjgmnnolppflehffnnnilpgfkemhbdfcfcnofnecjnnbjhofmobepmfnfbllkfofhblnkajlbpcpddpifddofjnnoillmkhhhhbjehmmnnldhbinmmgleojmfpdfmagmffngjpbhkhlemgoooplgnlplfnnlgnloennbofbdobeboeepmafpdkdopkfjehkjmekflffjklahgdljdlenlefdiohenggfjemmmhmlanoleklblpolnlnionlmmopeikglohbhjbkngflfaldlblofimdllbeafkkgojgpffhbnelhekjccdmhbhmkgbnbebnonnfgmfebjlcklnpeemllpjmldmllekdfbllkjnbkpbjollpnnhhmflldbmceaoohdefbfkhhheflnopfhjmilfbnnpnlbdpdalmnfaejglgncnllnlccpckclbpnmkalnokljjjhndikbfojeonjmdkljjjhnhbhmpllohjnngnkgpnmhfkgekennndnknnbpneeklkebogbekngkoofeellhndjkbgmpkpmoofnehfnneombnchhdbdlelmjmeeofhdkpddehhnmfjemblpokbpgmbddhjfnknnnphelenlhnnfkojnnpmnadhnjnogbebflboeefemghlfnnplmkoecnalplbobjkmdlcbcbedbkpoafgllgigmenjhedkndcedaeenmnjjgnjhdbnlnolbmalnckoeekhgenmephdonkjnmlkighmeobndekhlpmoodlomlbbhnjajppdpmnppjljdbolmgdhllkonflhnnpnfpkmeoonclalepledjpeddgalkgmknkonghlbloghopmlnkanlbnldmpgdmmjgllfflhecfmgpmpjjoflhbbpnakmbfhlknfkkpljfpahmloenjmlhmfecpgjddjaelfommegndkjfilknllocoincjdjlklebbldkjldbfnpfleibdgbehmcllmmmkmmobonojmpljeejmnfjalelbhhofdponmgedoeekklbdklnenmjnnkphmnkpbdmllomphljembgpdaleammbnlhknenhlnbnnnknbondpljknbhpeembmlhghbmbgjmnekhgbmilnndlmjnmcmlimkmnbhlapifhpfoekeemcpfjeipjchlnnepolnfchdngpplknfenkmabfinlejkmffoebldfidpehhbllcobkhepeehllnbpndhnbkoifbobbblkooofldglnbeoheaeoolkhneoenjhahgnlgkbendoejnjecohnejpepneolejlbkglegmfmlmjmdlmnnkminbpblmhmhkmllmlpjnmmpinhlmngeddnflmhnpipkbbpnklhanfhlmdpoogdpdlljndigphphlbdhompnhgmdehnfhklkljjkppdknfemojlbnlphlodlnndllenlnhnpifokjjjpmkdplhnppnflhehgjllmkpdjpenmdlnmppbdkjlhflgdnpmbjeoenloncnmfpjbnpabpnjffbclbmdjmelenjmklendaeleohflmknalcnhnoecjkphpoeflmgeddnlmmebnollkdgbljbomnnfneebpdejkdombemgckoplgpokpefolcbcljglflbofcgkjepnboghnkhdppnljmnnbebfnjfmpfallgpjpmeplhmlmmppfplhoecllinjnjdomnnlfehhdglejhnkemehpfamonlnnhnjenoonfnoclnpflonokgphemhemhnjhgfoeldbdhjhnjmhmmlmnldmpdhbnkmpnbpkhjlllbnlbbommghnmbpnjanjcnkmommlmmmopbdmlelppeljbjdolkejjpdhlfgefpbndnmpbebelbejdhnbidcefkalhondfpknnkjhjngdnfndnifdnhnkpnapeejndkbahpgnohhkphpgeidnehgdnpglfkldjkplndmncdgdoddgppffbibjngmollnemglpnmkjhalnokheepneodjehpondfhlonfgplfblcgehnlnlhlcfmhfchmomendiliknebgnegnmdcnnojgjphmnljongbeobmjgfgemfdefhnbhlpnlmbikenenlnnofhpnmflkglnmjkplblpemdgfaefjlnnpecnbofbkelnknnnpdkndbmofcohdmddnobjdjekbmblemdgfinfllngdpppghjldmibknmlmnhojmkhlnfkjllbkolieonjoplehefmclhehednoppgkdfmlgoeelhlcelepoabbplejgonngjljedmlgenhmmdbmnahlenfdecnljoepmmckkfblkgdbaljiomjbglnhlgkndepielheddienajnffdhlpfneefkmfpdmggnppjjkelehlblookahkdlflflpilmdoocjoennnofbnjpichmpbphnblbgmbpafloloomlgmobhffcjggfmlinnmmkdhkeoljgobfpbnklgiilkmhmlgdnglnmlkhhnmldnnenjaplddhcfldohhmljdakeonapoldmdmelpmabbbmclelnokomgbllkbjgedjpmpglkpglppinomepbkdbglpbdgjnlnllnbjleeonmilnljaeolepheanmbnkcebjbpfhjibhnhobomdfncdknnoojlaeolcllkcgpfllglnfljhhdmaoabmfiponnmfjmlpnlhndalbhnieooegdcajnelolgmgnlhgebpnflgmefnblenjhegflenllpglenobelhekpeeamhlokhlbnlgednjeglminjojgmejghffbngjefgmmjoedhjjpkjgdfjfnecnfejedlkodmonlghlflpjdkdpninnkneolbedpendfblkndllbmlbnbhgfdmjdngkjnfolpjpjfhemhlledoedlkklegcmnebekbljgoainggehheebhhgljnmhpgiejllhfdpeneegjpmfjfmmenfedehdapbmplfhdgjhchbkgdhkfkpnejonnhfhjfnddmflnndmegemefoblnmlcfggdkpopnbnjhmenjkkjpegjnldhnbhlefmjphlkolnbembbefbblmodjebjipmfjedafgfemnneecjhahekladmhbekdljmlljdgnjhffpllpjoehgfilllkjnlnlmjkeliblemklolkbjmlnpjnnekndbhbkhfnmpopnedmddnemblhdkmjlkmlpbikdfllomnonclmppncgpdoelbemjjjlgngllkffejngekninnlddkgbmnlffbnbdmlndiblffanlmkdgjpmghneceeppkkgideepfhmendjbhbcmdpfpnmjnhnkfdnmephfmenloeepdbloeolljgodnlamlpohpnklndhfflegeejjcmdpllpemeioeenoeghnebpfgdeblbffhomhlplehbbboojomdcllilnpfnhjjhpmbdhenmffemkpjnfglgpfjckjjghfbjhlpofnbonhlbeebfnilpnjljjlmpfllkegkpbllkpneipbmbnkhleonllnbkhjnlfmhmidmlhnmpnmfpkbboblfmelmfkhilpjpklehjjjehfdbdefbhbocjoehlbnfndjhfneninlojnaopklfjmmonjplkgpojjbmaelbpjhnnpcegpgjlfbodemeiggmmndjjbonampkpnjbekhbkdabfgepcblkbpnncdhenmbonfkefefnpodgdjmmannpfknnaehialmndekndniboohgeaendmfhmeldligomlnnmfaljnfljbmkbhojabnmneepllhpjhnmgochjolnnfmnojgngmomnngnkbmhpbmhnlmlfhfelfkklldmblelcknjnoenihfjdnbgboenojenlanhfgecpkemfbkgdfdfohhmfllgepjdkomhcnplhmefngfnnbmkcghpeehpgnggndojoaabpbjehbhfoodgepplddnmehnjphnhepgeneememojkmglifndebppkhnncmlejeldibnjkkmbbklelllnaeboedjnlebhjdllnjbjcjnddgfjdcheohdjjbeejonphlnklaeenhkladihdmdpmnepeljolnpmmjpnkknjljngjllgeelgobdhlbjhpdgehbgpfdhobpmdebmlngcfbfnplmmojmfkbhhlobnjgnpoamomgobmlhinjhhchnpdpgpoekodmdmenpdefmbogoplelhlpmioemmflgjelbdaofgohjdoggockkdpohjednckljblbbhdjlplpmlpoffpfklelphglnlbegpigpfdnpdnoojdkegeefcbdoghmkoejhienblmhdnmknolfnmonjllnjcoeklhgnflmfbphnpjjpfmmbglplplkonjaghepmmlmlnpjbhlhfholkgpjnipcmfblfeahadbebccpmmfmhbbalddbmhhkohfdnelmligfpjdbedhkejjekeojelffkkglnjdppmhbpmolllkboepmhekmebpbcfinlngmodmnellpjphfljmjeccpeonfhjmmmjcbofbkjjbamkfemlbkhgefdkjjjbamlnoleeblcelejecfbpgphlbemlmlebpgeeoklhnfoolneeellenmlgajmfoplpfhpnblklekdkeebkfngknblmblmaoimellkfblhmdfdjnlljpbknjgencplimnjnphhjgnkoaijnlldedpejphlnldcelffemelmojphepmbnljhmkfonhhkdfknfjlhgifgolodnlbldhhfnnghlghbeneolmnjpiffllpkblafhbchlnbbdpjigfmbljdljllkhobbjhohmijkkekhfhiolhjhhjedlbcldiflofhmkcjhlfddllbokbmdnlhbenehnojphlnenlmjlgeblheefjoligjlejlnjlmlmlolhghghefldlfnjpbblhbjdmfelnjdllllbpjnpjmcehmjokimlfmcbopliplplbjlemhodljbdbgekkbdijmmldocnnmhggkhhjbmpgdnbnglphnoeoammbbmopbhllpodlpneghmokniednnnleeneejmahlhdknneebpfmplelolfnlhlepmmmnmmkdhloiljldmpodkcnpdglmgnhbnimdoonhemelmjjjldmeackooknonjnmloemfjmnhpenmihmdnbkaeoghcljemjajndimkdlhhpmkpchlnjkpnhfkkjbfjbdiamjokhphlhkhklnfplollmlmnlnojfpffgbemmlfbbmbjdnlbndglnpmdgggbneehlgodlhefobnfgnnfllepnhpdelamnmemgdhomnnldfhfnhbmphjbojfbnhbhomdohpgjlcoljkddbpjdglonannofjkamafolbfbpfmlambjdmhhnfejmbnoenbdonogbpnkamombjmfmechdaffpliahkepndfedbfdfeealpdaenhfcaokdelhmpepmjjmdjefgmlnolmdhobmlehdmebmlbndlhpnmmifffnbllclelnlmpknnblobboglnpnnodlehkjllenlelfaedefcdfjdgcepnnfeepdepjkbhbfmllpfkcidoghfnmdgljlbkkpgbfofpllofjkbdbgceefhbegcfgmdnhggbbbjkhjekmlekadpmelhgbbecefkdgmmddefmjnboebpmbhelcbjehemccpnnlgjhklmpalphpkomkhnkonmgpeklifnfojfblopmpfndbnnpdbnhabelkjjomlhdekkebpmlpdngojmfgkpjelhnaonimbbljmlbbfjmplnihfjmjlnkbfolamfklmjffnapedeblndegpeeobfcemggphkpehmmbhnbfoendbjllbhdbhdeabmbmdepndoofjldbpkmdleepnfojlojgajlhlomfjlebgdpjnlmnjphiinelbdcjhlfhmffngmhjjgppnbnggllhidfpdlednpllbnnlmlljbphbeknelafkgpbkjlgjmobldefonldgeklmpbgneeofpojeoidfbokjcndefcdjojfkcmfndohpohekejfhadfbpnkdbcehmfinhnennnahnjpjolldaoifljflelpgmljdgoklljnjjboolpogegilhomllhpbmloljkllmlongemjfcenjfnkepjnllfpclloemkoeempfkehhidendplndkgkilbfneboledlmokjfgfhoappddeppfjnpdhmjehfgiomnhnlemplmmeblkehgehhkemgpbpnfnhheolmbhomdmegnpppjnfnbblfnmkhlbpikllepannmlmgljjblojmflennljeheijdendmenemkedpgkpnpmonpaklpkpbonoehgnbhjkfdelngheibldmlmlffkdemlpbigbfkbbkmlkoffhemjennpnlcnhnjnljhebneihhlklgpdlnegkmjklhlljmbflhgklpllfdnejimdefokojbfoojpmgpolipnjeolgjnfjaalndbddjodgmbnngphbfejjljjmdgenndhcmngeololmbnjhlnnjnmnplhnlmkekljhlniojjkcpiddemfnlchgholebbepmfbodjgbebpbmjljlilbddcjlkjopnmklemomlbbnjlnongmglbfpoeemniggkmaonmenlkgeapdalhlledmolkgoeglpollfhdlpmgphfkbnhipfepgmaiomjkbellnpinmgmfgnoldenkmbhpkfgdeelpmllclfkkoldhjngmjnodfldmhfplopijbehhpjnboiohldjlpppondennbndgmemghooldhdhaflghfplddeoenbjnnhnbnbkbljnnkmbgnfeghjfjfjkhnenjjehnmfnndbldfgknhoefohcehedodgaibjlaebplclnnncfophofineekehopejpmodnhaelbfeonenimkmmnfgenolpnpkeoaboocnlimnlcbmjolkelogepmannpebnndnfapddeblldejipfmjmlmpjnpneilknjljmnklokolngdhnbjmjomhaekfeeefemnjmgoihnmelonmgohnfmnfdplhjlinphmjbfbanlebggflnhpafjmnlgmmbfcnefddnmgbeeekchhedbfllbnfhlhlphlbnolelldjdonmdnllbhpehnbbdpnjjfllgngpjkbpjajlnllnfnonnblegeijmocghljnkjblpbklpmbpipnhbjcjpdoojldmbhfffenoldenhaeedckbggmnmbbdfgenlngffdelnnolgmndjkhbdioilflplolmcofidmknnhpmkfplcgmlphlakedblmlplffijgmjoflebiofllaebjeojlpljfilpaopfbdcmflddlolgoadlhdnbjajljpfbfghonllhbbjeigdjplcjmllebmknljelonhjjnofegjjllhnmmldgpmhdpbfhbfojjkemeglmlbpemenofhlcolmjmlokgdnjgjppbhbegejeohfmgffbledhnnnohdmfemgecedhfjghokolcnmliabmhlnmgbefhobgkmnlemhpnlplkhpgepnpllmlolfpppmejednflcblnmlmnioollbfnjmlpllbendlglaklcjbhkkfcnpfmgflojmemenfpjilgdejoodfpiclgnpgfklnffbpdhlbnldpehjdebcmjiplnehpbojonbhfbhoilbjdcpcdjodlfmbbnlbehnhnnjemlboglbopmnlfmjooienhfldlelgnddndelmnompkbemnlbhjnlhfpploapaelnpnnmfoehelmoddlnplphkhlafenpnhbdbmhldpbhejfoghgjggfomfhjfnhnfkpfkghhgndhakollgcknjbdbeeofkpfgnilklggbnpbmmofmhebljeljbleegphcmehkpohmmpbffbogahllhmojenigifgnhngbpfmnljkhlejhnkldlejlflmedmogdlnmelndoafmnogdbmebhnjdeoajjeekjeibjchomfnbmeghkkpndfmoffflcnefblmhenlneklffdobknljoeehnijbgjeoplhcdpnkgmkfkejgjodbipfnmnfmeekkpjmlpefldnjlhelglceniklbnoenokfhbgaflnjfpnhnnhghlmpkobnfflfpmpljoobdlgpglnjlnoempmclbnhihodfgacedhflfegaolebpebnlkelnologmnfgjgebjempeplhjlpfhlpfjjefndcgpjbopmmfombhljkegdfldfnfdllmopjhnjkpnnbbcmnjlfpodcnjpnflilbblbelcebppnklfpjandhfcloeokbidpdhnldknoaahmlnpjeelffcggmdnlmhbpmnfkbphdpmljjnjnmbndbojnlglfhilegflpbnonedhejmfhpdilhhlnlolcoglnbmgblbblmjfimndolhmenebdnlejggmblidpeejoeoknenlekejhmddfpcedlpenlalffloenmdhnlnbjppdphnmjnhngkoeoffnbfmlabdnlhdpkjclkkcmojlhmlbpheklnjgbennibgihnnllndefkphbcljmebngbgnemheeehchploljpoogbljkglnlacedpplnedohojbonblpmlnpnoiljeealpbgngmdjjkliebjdfofdecmnpllephjkeknnehllpnmhbpdbengfemljfnbjmmjglholbooeekopfkbbofnopflbldlolnlenmmlcklfnfbkdnfohpngnhclcnepdbfdhmabgelejgnmgjpahmgnhaipjfjgbdmameghlnmenbepdcfiakkenhnhokokfoehkklppbenopldlnegempdkimbfnjhndapjbggpbdemnfeedfnlggbebmlmjlmppipolkkknngjbglghlgehojgkegebmfpgbhblmplllnkgdjnjjholchameajbpdlngnolakmkdjfpljlnmjgghnmjmpbnmkmjbpdlhjlpoeknbbilnbbbjidnodmjednncljcmbbpnaohcbaomnliabgdploedoeedlcpnknjhmfckjnmcffnkmpojenbkhnbbedblfnbdnpdfppalkjjomjhnkkgengjbmlmjobmhllmidfnmededfjhjnblhnepkllalgpepgkgjpnhdedeagkinobkhdomilikakalkjdhnchkjaeopbhhfonnmhbgjbmffncjbglnoihomjmmdoaneefpollhpeonfhdgnekfemblbhepjhkgenmlnbpbhofifpdgmfohmfnbknbfpjnigfmelhnelleeelenelpjbdmlllhmggolenbhnpjmlnkmmejnfdpdgmcllbobhoejhncmhjikeljodnilklhbkkohmoeaknmhamnhfmdnhlenkoplhgpafjedggnhfejmmjlgcefefjoglcandldjlmjhkbpllljghflomnjpmfdefkjdlellmdjpojeegndlphghpledhgmmhmlefklcbjfplegljahnnhaeconmjnfjkjopephempnplkjhjfppjeoebnmlekkhgpobjfdjbnpmjbbfejkllhoemhhfohagckoblbjhbnbfdohalmllghbmdmmffllcgpkonnlimnlondejdjjhmhjgjgkcebfcpbpbomeimhkheplbnlnfogdneplmedenohbfcpgmnjdlpjdbdeomnkfmendkhbfdliplnnjnndoelfdjdfpnilddegpmlmnhnphemlnglebmckgdgendebhebjpnghdehnifknddjhjnmgofhhndhcpbjmhdpojmlopkmoobjonhjhmnkbehplnfmlggnlekjllbmmmjncjfdghehjehpnfohapmgpppfppflblohjdllmooobobcdlljeidfdlncmdnbcplmncibokllljnplnodhnajcomdplblelklnnfhlbhlbkobfikohmhkfnlnnmbgfhlgnmcdohholojojnofdimhedpnmgmlkppdghmlepdmggkggfjkolkgdbgjcndlkemnbppnkbbhcnlkjglnimjehpjpljpfbofjenldemoldhlpnfklnhobaahjgelldjefpeppmnffpncefedeefbgahfagoeljccnaelndcbghjllnghknfpkhpmejphcamfldlnbedjnpmmonmlcgpgdodbfiecblhilcnmlflkbemjnhfhldgbnknenjnnehdhpllgenlfimdinbomhbojcdbjgehjefgfbkioekdcjjbnhllddlhlnddenoblnblmpeoecdfnlmnnbfgaednfnnmnllphjmlplhmnokdpoenhlgmfnagmkhnmnfonlkdppjfjomlloaemdmhgjeleplacolgknbopfhendkjlfdpfnhlohngojhjfoddpdmojlojhcpjejbfhghcnjejgbfdjnkjefohpnlnljjjgnkepojhhjhgjllnadabgnhcfmheljldpbeabpomdldcklceejopboncpnmpfhddljlgkklldjmlndhenjhmnefongjgngmhenebcpgeggoendhlijkhinacmooogkcfokjplnlbpcehbnpghdncdgobdjhlohopojpjolenmenogehfmohlneckjglnmmcijcebphbpdjjohlglghjpljoejeljnllhdnfbpkkblnhenalipmpkhjfhdebbencfllpkmlmbpenkcblmmnfeglegebmfbnhbbklbedfbmglcnoopdjlcflciplhgbnmfbalmjjdcnphnlgknfnmghhmhnbmedblnlnelneedbalkmmhjjoelidklojlmpnhflbemhmmmlmllhphanhheklpcjflphhlbpnpgojjnlnpeclapgpmbcemeoebfmdmlegelnohdjlncpkbelleclnjepijffejbllplbjcojcnfefojdpobbmoolpmlieelgpfiemnmhffddgifnkpejdnhhidlpgpdemmiokllplemjdodppkpbfjgbmofefdkpgohehjkhemjfjnejmnonbjkhogmloplohnehgpnfblblnencolmleffponnfbbobfpjlemadhgnlondmmnhbldgfbnoopmcehlpmflffdjohmpplbekcdhhgdipheonkpjollmgnfnjjonldehjpdlagelkpmpbpdolhlhblknaopnbmkpjhljgjllnpoekbcpjflmppggomjmlpmipolpamfnmboppdlnmeenkjpgopopjohmhgnenjfdfkdmbafhbofbjmlnmglllkohpnljekldbdbo'

    for c in a0:
        print(d[c])

def test_1():
    d = {'a': 'activities', 'b': 'appliances', 'c': 'artists', 'd': 'automotive', 'e': 'cell-phones', 'f': 'childcare', 'g': 'general', 'h': 'household-services', 'i': 'housing', 'j': 'photography', 'k': 'real-estate', 'l': 'shared', 'm': 'temporary', 'n': 'therapeutic', 'o': 'video-games', 'p': 'wanted-housing'}
    a1 = 'efpmhbmameljgnflgclmlmnedmjeefajbmphfbmmlkndngkjkedlomioiaehhflhnopejnkhnndleehbddnbenedjdbkflncjndmmocnfmblajbhhgmedajngmhfgpgegnpehgbfjcmplbnejilnnnkniejmejjmlkkklbbmdfbchpfladkkmbblneelpngpfbplelbhbohnnljnloldfoplegolleemdhhmpagdohoffbfgmdmeabjnpepddlklhoomppkpjpnkhdemhndjkfjhbogjnfnkneeefmphbffnbjpomonjhelhfeemmcoohdgabkagmaknboldllpebmlnbhmkmfnmfjhjhmbnejhlfhlbhnfhlekjnhnlhffnponcnkmlmaaadnmbhjndnblpdjdmdndopjkebhnnknaeeelalfemlhnfbbbmlggcemknaaldekbphlnbminndfoladpmhflmhgnepfnndklemmnhmdmpbnadnjkhflffnecmdkadbhckpkjgcjbljdldofhplgcfiklebkpmelndohplckokonegnjmphiaanpgmhjplcolgdmfoennghgdfcgfpnnfknnplggpbhdmnccnedhhgbejjbnbombgkngenfegibokbmnfnljmehfnlmeffldpopmneojlnonkoehlophofnfplmenflnplnflnmllhnbncflceeklhplbpnelodejlpnhnolhhhfnjkbhlhmfmnjmhefknljklgjkpbbflkdfeglmgmbfegnhfknffhinllhjcjpbnfndhnlgffdjghhmjlopablfeodcgfmhbnpbhckhhenoflpnkeoaelbehlllokpjklofohflnphbgdfbbefbbepbppepkbmglnlpbbdmenbkegongmfdnlbnfkpfhmekjeholdelnbbkelepjfdeeebhmmfkmondobemldpgellnnlhkhbnfmjjnbnfhgblcpllhnedlgecjngpkghhehkohjooglplflpokmdnnhlgjlijmelhgpjllhppdflljibnhlnnlecbjmogbbnedbbedeggmonphelnlnhlkcnmalplpnhcbeafhiecnclmhdnhhebfnlleeephgeneldhnopefhpepnikomfjgognoenabolnmgpipjfpnnbpjmmjomnpjpencbjggpfdlkklbebgelcljenmdffnpjemdmjnmnnjoignjllldopkkelimmfndpllpefhfmmmdblloldahdlldcmmlbldnoinennhklbmpgpeenhedebjbllnmndonjplocohlnlpkgelfpelcdmlmbgmlegehefdioojbjehojdlfjejfglholglpllnmhnhmmkbfcmacmcppejgelmgdmilknnmknhelhlbinjbgmbebmllahelapnkkdplhankblmlnehedbnlpldmlmdmmhndncmflnbmgknbekbfhdobpkdmdnfnaemnomionenghjlklldnchedhdhbodlmffmodpbdodeolfkbbdknlnenhinjbjenblljnhpfjbnmpgbehecppgnnenhgojlbeejnhoocnmlbempkijlelekfcdmlhnlelihgegnlbnhendnbnmfeaanneclefmjnpmbagedpmnmlgldkjgohgpmgbeopfoclnbheonfodblgnmdlnjkkjldlncceoijnglhneelllpngpamfmkjkoneindmpngphjdfdjapijfhoegpfdldnkbmfkjjhddjgokfdloggogepconolkbbnhddbjnneomnlpgoopnnhmjldhlmlnnbfjeckhkojhbondlhnlhodlkehdfgnkfgppncijbdkingjmbmllldlnljllonkonmfejjemhkakggnlgefpipflhgghdomlhgdhejfomjlkkdbpepddeggngldkgjclkjinelbobhhgnejnmlmjblenjijgdljohnblbcepnpdgnlffciflbbmnheomflfmfgnjjpocpjblgpanpmpmidhbmhonnmedmbfbgpbcfgjmmljmcmmlldfdgebhclegdlebddfdnmjjmbanhkbaljlmbmbmbmdeibenfdonmoenmfcpfofodbenmpbbjonpbcmgehnlkpnhmnppllnlclnklhmohemmdghmbjonnppnngmjdbdhjlkocklmkpdfbohmbfmekjoopjnnldijlnjlbbjbbjldiikmaomhdfffpkpeeppehilcplmlfboojghkeefhfchnnljobbpgehdkelooidnglaenbbnlplkohjfajemeeocogjmgeleffalocladbldlgjgnhldehhfjaoemnljhpclfnlgkgobeonfomgonpiefjknpnlpnplilbfmeelobnihppbleeoplpknbpejmbenfnflhbojfdkmcllhknpmepljdhhnebheheelhojmneolnnepoecglnaaemjgnppejohheflhlpjiambpgnkedijlbmlekgenbfdopkllgjklmlllaolejdlmloiolgbpeebmpeebmebljjjphpimnbljbdnlhjlmljdjjoeonelbfdmfeegfdhhmlodeejfnnceemnnkjbldcikgdbmcdledbnknnmophemgppnfplojaenkpdldfkehheapmbkllpedopeolhgoflgbojddpbedhnhifminkfngmcpkbjpblphbppldfnhjfnoblhadpkpnhedgbfpdhlepomcjknmbmlmkpbdbehbglnlpofgmellofdlnennjbnmpjoebmppgapfbclphbnmdnebinonflbpplpfbbbdobfmhnolnlopdjodeplhpoemjpglmmmoachbhjdjhpnjnnbiklhbnbnnpphjnhbgfkonldblnnkppehollhggijhmkfblmpebglmlhllgfndnkjojghnmjfgnjlldokbodmmmfckhpgbeglphgojdhcffhlehfmbnkejponllmjeljjknnlpophobdgbljeblhdekafhlmnlgphlfdonhokknffhbkelhhepibefeljfpbfmdofledlnkppoghlnpkkoenhgglgncmbebfehnoohdmcophkldlppknkplmnebjgoninclljjekgahfljnmbmbmmlenedfhbllepghknbnegeppdebklbobefhcenfeghlbihdpjmhfjlnnoleeeofhegmmkdkondednfdpemfmmmhlmmkjlodbenkkfhllinklekdhhflgcebnolijomppiabemnmjhobdhjggbejlnhedgpbbofepcbdnppebdeadglflkhkgninlcgdfpjdmnenaegfolbbbbeofenljnkhdpepljhedpjleepnidoegglnlnmjlbcdjodlmndpjnndbgkplnjdbdgnlallalpmmolhlklkalejdpmmlmpplmenfefflbnojmhjnpfknhjifbjhfkndmlkjlocjlllhidgembnooblbkhenkeomejgokjoaeedonblbmdblfmdnjbmnlajbleloelgclhhfnhfllgbjnlbkkplnfmgelpjoljgcjblpjhlpcjmnffogepjjinbmebjchpcpefpgkbjdnenlkmbflgibnfbdjkjmhlebljmbjeameohhglpinmjblgiogffbhbfhglgaodnlbmjjhblehbfmdejlnlgknejjphkhffneolllblbepmojineeojkbhcjkbjefdmnfpllbplfbhelefjjdgpemcopmdondknjmbnldflneplednnikenfdnmmdpdelfplgdddlopglhmnlghocobenfbppblleononlmdhnebmokknkmlfjglpfppdlfhlmpdkmlfnmdpljenppbaojbodhldllphheiioogenehmbndhdhennoehjmeinjnknnlhhddelfennebbbdjmapankjlnpbnkjjjjlljpekkffmhnogjadjmghmeolhjnelfeemlpmpjpbmeghpmmdhlhkdnapncdpjbdpbmlplbdpfmkmjjdljlnnkpfgkeenjeinneelmhkgdcgjellmmlnbeelhmgedpchphcbehbhjflllmbnblfpgldldepgdbnlbeblkjehfklmnlmoblemeooejfddmljkhklgfmjmjlbjjjjaffnmcpbdjmlhjnlefgenpnddfhpmdehbdlfdfnjgnjoommjmnmbjfogkpdogehlnnjhmoagncfnbenhcpeeaobnhgoflndfkmbemdcemfpnjoknbbplpekeommbpejmoobeoneflbjlpgoganennedkgnmbbjlfmepnaoingjincelnmkjljjlijfenhheodeemgkljebfgbemdmogmlehnlfpddblobnecdllmlojdlcpfpmofbkpelmnjkffpbfdefkknbhbgdenkjhlpffnlelngmdlhoelfbpphnihngecffdlpbpneamihgdgllemnoglggcleeebpedljkpnfhhlemmnnohdlnbdebndfhckgnpfpgelmepcphgeogfhjmnnohgljnheppoomphhldlinkdoajdgkpmnkeoefhobdhdanhfmodlhmnmnphodmhmbdghkpinohfggnpmkfekmcmnepenkidhlpephfjiehoghfidbknblfdfilnplflhpmooenojpgglomonlldpnnmjplndglodnbjjkablldmemelogffhdanhjledleolfebebbnplmhpfoelemfmbeeeebejhhpkmjohhnblmnllehldblpjboeaonnbmnbmofnlidlmnhllnhjmgglnfjneemfllfpnmhebafnlokdlfkflghnepclhmgdhnelnfedgpanknehgmclpehcmhlbllepnkhoklmeopflngkhgcmpbnnjjjdobjommdamnjhjflnmbpkjnngnlengdnlbnffpekppbmmafheeknhlgnlokfhhfooiflemopnhphbdhlieljomljfjffnojliolfnpnnpffgoibfdjhobndojfepjjnepondepkjmnlpmgkhbbhoehenoipnfnihncdejchdkgjhdlpmbfoemoofpffhlnlljmjonpompknallofnnljkepogkennlbkpohelfhkhphpnfdfngpelkilllnpnmnfphdlninmonoljmljlfpnmhpgcmlpjhdehflpfhgpknnbeedeneihobllllljhmkojjhnoleocmlhpnajblcfdnlblfobdmebbhnhpmkgdjfpbbelhbjldnnmdnccojblgmghbjooebmimdepdmoolmodmdhcndlfmoddeenhhhkdhebkbefhhlinkkldkjjhbkheknlhbojdjfbcpplikhbhpdfobneaafbnlogmgldfelepnnjpjplekkpmhpjdeooofgolhhikinpknpmdpegfodblemngnjdpcppnkhehlfpphknlppglgjpbkliglojjbbmkembgfopjoogfplacmcilblbnohpfjkpdnopklhngmnokhefaipknlmdjejpndieealbemnnenpnnocbfnfalmkodpmeohnkbpbpnknlnmnnahfehnohglmhbbbfjccabmglnmejmhfobpkehddjhjdlneghlepdjglplfabebnbgdmmcpkggpibpplneeneonoeommplbldekpifmnhldcfjeejndeemlhpfgeilgjkbnbpplgpmbpfkippolmgodclbphkiljiajnengpjnmeenmkodfemelnmckojjjnnppbdgbegjmebmldlikbfoboekopnokphnpkjnjlonplhdemnebnfnmkbofnlndbmmcceegleonhdmbfhmlobmdmkmnoeeheobjonelppalmbpljmkfnfbjpdljdlgmlmeajnmjmelflpjjmdbepdlbfdlnmmedblnaacjfnplhabaegjgpmpenpbjnlnlkfbebaenaeekbnlhkfijjjflofonmgpflbnklkhekonpleffieleineehkhdhnllejnbilbegjdpmfopblpfmncfnaanepbbmnfhnebhjflfnkljlgnbpplaeiflhnihmiggjfgjjnljcoemnglbojpmmaglfejdnldbefoeknbgieobhonklojfjnpkmlgpbeijppjldopldenblhppghbenncbebfffhhkhinmbpkojjmgaklgalcocgmalbopgocjhklanldmhplljhneehpfmbffmmoejnnnfclejhfjklebmekelnmblnbeenneimlhdkmfmblmnmlllcbepaddjkinhlpdngbmecmkbgnlebbknlhgookfohlglhjjlalfmojldfmnmobmebeipnllnmjoijlnfplnoelbnnocingbnonhlmlnhgnknhopbenbcjlpkfdgjcpobnpmnpnenhddkbkboljenbmjmecdmflfjainnglbjogloofddlomahonjellehkdhponcbppbelgionnpionlghmpeppbbdnjfdehmbkhdbmpnlmeehegfpfidhekiheeljhllaldhjafbhmibkllfllpefhlnpfhnmlmllomgnpjldlbdllblnkhpfmenbmbmegbagmeidlflhljdflkjgpphgelpoenmmnlpdjmjpdoponfncjlmlobljobngnglomhjenldllkfkmlekmpbhbfelmgbndjfhckmjlgcldkmfnlnlfpehnpiggpnhienpdemkgnnmndlkjhohnjkebmfpbmgfnhehhledeljockepkppgdjnnlfhbnnhmdnebelfhjpbpnpamiihlpmbjnehdnoeejembhaednmolnmbkibkjnbnogngejcllhcbldkpfnogjboempgldggfpdokdbdhfkfnhhfjobpimollddghldmbmeonjpnenjfglmnphplhjdjflelpclonkjmkbnljhhnfomblbijcgnkddgnlkokepfeodhnlkomgbpphofkehjjdgnbdnplkelkpnechgmeegnabndlohcjllfdlnhedepofbfbhfmfebhnkppeepnlemgogampnmlgmmbfnpelhodlfplbpjjdjmhnmfnebhlkonoommfbohomhhhnlohlidncofkpfpgellpbcbnjgmhgoejfmdhlemkefpmkefnidfhomknkjbfffhnmoiecmmhpmgepjmnllpedddoklloddlneeklhejonlppadompejjpkdaglicbomhfkbmgjlgfhnedpngpmbhdndldjedlonkkmfoldeedldlbjfnonbjneakhojfffllmndcdbepngdcnepheannpbgnnmghdihpfallejmdnkdnlmbdandhonockbphafdfllamjeppjldhppnnbjlhlbhejmlnnphhdabkelmdnjebofdedfpngomlmelnigjlblbpeoenfedlpjhbmmbopbpgfejgefpfjdelmihgolmgnelblbbopgbifmmgllelnedkkfhpgfjkldbdkmpmmlmhlpkpcnnonmjhgpddcpocdmnjofnbdlljhmgjkohpjjdapddimmalfdkpbhppnljlhoojpbdgjnjllpondlolpmknmjbgfenejjjkfcgifaceldknjphenmlgfjkngogdklelecmfnnemkbelfihemmnpkdmffiooolnllmenkhlfmnhpeelplnpeecponljjkloonkladelohjhkfbllppfplndlpebhnkblgmhdhgjnnllbmleeljdmnnehlgmgpnlniefnnpphgklhpfjhoidmljekmdeklejfelmdhelefnnncmofhonnjejjpbhdljljfmnpbphpodelmelggdhbijklfmmdhnmppdleoklenpglkfnjlbblaogjlbhhnnllmcpofnjdmnmffnhdnmnemjcjbhmmdgmpjnbbeblfejmgbjfkfojebjoignlpgfemlmiknppdjamhbnkkkhnkjbeeefeljnblpknhnnfldledlillbpddlbeemibmfnnjejlfebbonghdolmpenkkbokglabeehelmlbgpdfdllfhdlfnbogbbdpogglgidlnpjpnjbddnnlpobdlcneibenmjflpehlmmdllofomehghblnkcplnhlfknjeknledejfcmndblkemmbbndjkdeebcokegffaghbcncdnbphhglpdonfolpnmmojdkfbcnedknnglnjkfmglcildlleeeofcenkoldoonoggdlkhilinjmboemblbelphmbeogkmejlmjolfbeeloddhenheflhlljldjhofcmiojobhnabocodpnmjjnnendjeekfkkfifjbfbnonkmjlnkeblhcnggjnnjdmkejnmommegodbcedkhjenlpkdehecbfbopeemkpgkfgfogmbfnhgmlekgheoefhknjdlcfmlcneljecmlonokdnponbpphelpfhkonbfelkfjnlhmbocnpedfljjnbglnhfdjeohneejjeeghhkedlfelhfhdnbengfbdgnfbdnpkpnancpanfejpednjbegieoedknegnoblnnlbemgifjgnbppjcddonllgcohglcbhnbmgkoolnhhlockfllflnnpnfjnfmdlalmplclnhgmjfkmbbbnmnelmnlmjjkmfgbolmjmjalnpmmefblgnlonnepplbljlnbmifenogmokgbnlghldnkknobfafnedffgeldfnlihcphommnghnfoddgbeokpcldakneppnbljkfnljljnlpcnpjppflemmlllikpnnbbolgcgmbjfegjabmklmhcinnhbgpoaldlejmmdbehohlbldmnpnfeigmbkplmdlnnelleenllopeobonibgnbmcfooliheplkpdaihfblenjdkhnngpnpgfldlnkoenmkgpjgdekahbjkdoljngpelkonlknopmeodpjpbemlhcmdjmhbehfhmkpbdnldbcnnbmolgeejdekgjllfjjhdfnjmefjmonlemfknmjlkdoighjjghinjpnejlddbmoajdemeljlglejopllpbloklncmnhdnlgefjhmhohelmbajdhfinkdmpillogfoplagjlldgnkfchpdafpgpbgmblclhfjjgmpdppadlhpddenjpohblafljgofhpblejpmnejhlfmfdeenolnjhobleefnkgppkjlebgjgpmjnkacnlnfmmlpbndfmngblncllanonkblhcinhgdgcmlbmcpfneedlfflpfhjjblloffgnmpneflfdellnhgejpjhbhhnkknaphdddgpngeeeenlcbhpjmnbjlddbmfnlehjkffhhkhdponjnhofbbhblpekmgahpngjbnnnkldfpolddnmnpndmbbflldhophebhgebplgddbjnblcegofjlnmjnkbpglnpbdnplgjlkgecengpoplnebopnglfildeoblapmdmnlafhhmfjpkfhjnodgblaphdofmobgkhkbgjgiehilabeejjllnmindhennboihockefbcngbmkhfppncmcgmohhbpkfnbkeoflnphhddepfjohglmdnhjenhkkofpeeoeelbodchealfpmjaoejcleibjkoghhkdnmloknfhpcmbplelnpfejnpfellhodlifbplkjmbpjdgmkndpnolmofjgomjpnjjdldffbobpgdjeldkhdffkeafpokdgnojpbffjlgfhblefhliklhfhocjknbeodojhlnhjgjnajnfdclpdlllnlnebfkfcloemonmgbpmmdefimbdlendljbmlijekompjllbldlnhmmkjfpkbcfpmbdffeilfbfbmnoebjlbflalgecnpjepilmbnekoghemlmgopfbndlomedhlegnmehbllpjnffohplmmlnglfkmnnmjblplpbadmppmlijlcnpkmfeglcnabdljgdnmmfllnlphbhngnmplilhgmcbegkpkpbhcehllmlnjflegjmjgljnenmliolmlombblhhbhhnlljbppmnkebhnblodfdfenecpnlndmnodjdlmlkdnmhglblbfnnhjmhlhkhdfffhlpdfnlonojhhfhfknknmhghjfbilhlgkjolognljmgdepififboelndimedjfjpplpdmbnopejofednefcdmhnlbnbmmfbhehlhpmldhgjegmdfnkddloflanfjbfpennlmkoehljnclldjobopmkddefnljnmjffmlomfhhkkdhgbdfdgholgndjhmbnmjpoodlifmjbaonhcfpljmmfdollfngbcjkpfdngjmmhdhcbjkiekefpndnegpepghnbkekpglflhmjhkeglmjbmohnpjlengicppgnbnnlhljhlikmmneogloagjmblbfflkbljhkdgcmlpjpnbgpmfifemkkndooggohgpnheldgojopeijfellllblejhejnghmnlfnllgnndhhjegfdmilpmoldhblekdndnjejklnfobmkneaemnldnjaemhohnmdmmdlemkbengkleemjncbeodpdegnbegnfefnlemlleinenfgegndpbebfhcnlepbehnekjkfjolfljnkpmnmjlhpgjgocjmjlojhmbhfnejphnklgegpojgcbnglhanejbhjhnmmmkmbojmnghmgiadmnbopbbkmmmiooldnjpebmdellndobppjmednolglfoinneembonblpffllabkpnhegejmpakbedmdfbhhfbfhemdgcbboghkedhajjnkipghdlfhdhbbbmflgfbfmohnpnjhkfdhejdgbjjnmbednbljjlmhakdejnlkkmhmbfkjjnlgfbmmnljjgnhpgffnphmfpbnklfgflmeanhkfllbhpnkhkgdjnpjmeomplbkjjpgglmolgpjhkkeobmnhkmemloefjhjeodbdephhkgjjphofbgnbngmledfonlkmhbhgedkomemlhljchkljjlhomfhenmnpndkneeicomphbfldpglhhfnohenjlnehcjblbdlnfoebjlemfnkkbcojoncjenkhgofodpjpgljbgdkmllnccnblgdbbegfpfmjlpeeeehemeffmflhpbjhhdjlelehehacdkefhddlfehpbmleolnfklklnjpklmpblkkgjjpleeonjlflfcalnneocdlplnlmbjpbgaddllpmlobamllookagobjljblbkfgpeeebdefelmlomeodbnmcnilebnlmgnehflghegnabdolmmfpbeblelndgmbmondkknflhkgcnmkjlenebncngfdjnblmfkepldcjjemnbjhinedgilmokbnimljnfhkcpdgknhmpnfbeplopmipcebmelpfddbfhjmmobpfdjekkojjpgbnnledmkdojellldlknnekednaoijmdjlbbjmgnolkhohepbkhfebdmllelbjbopjldlhhlbfnnhcfkgdglfehhnfpcebhpoobmjaonolohohllbaepejglecekbfddklkmnpelnpmladengdfhlohdhnefemnkkkcojfhlmbffhlkeckkdhdgjbnbfcgiljgiokobombhfpnljmmplbjpddngekhnnenblekhhpfpbipfkjdllenmgmeehlhdnihllkbhenloaobpfnolnlegelbpbekehljnkokmblmfjfenbahfebgbeinehjdglhfknelafpeflfoaljgpknokjhpldpeplmjkmeeplgcmfdnpepoljblcjgkehbefddlklpldnlllpfpomgmpjjobpbifkjlnecebnhjenkipjnopbnmeedbnljolmdnddoingjdaoljojmjpdnljjmjkbnmhpphfanlmpoflaffbmlpnbnmnjkligibpmcllepolpkfpjgjbphefcbjeanmlbenjgdobhchginfkjefnopbfeodmbmlbbkoeooimlnfmnmhjjiobgnobenonnclmgllmkehophfbjnbmnenkencemnmdkllgglbfnmflgojgdbjocbnobgnojgnnhehjepmoefngbnjpmnmpmjfhidbjpnenkmnomldmceghdbmjfahonflkjolbngmdnmdljnhhhfljgbmmbplpnefhegejomlkghihcbegfmnbjjaephoeajlkhejeljkjgbjmhcmnejnlfdmihdbppaglmklebbinohejnhnefcfbdgnlcldlfmpomcnbnlaoenenflfbdohpenbpmlhhoknmlpobgaanljdcmpdjjnobmhedolbbnmpflkopbenhlnelgholmhlblobifmocjknbenglenmmjmolnflmnmdjnjbnmkpjfjilajmjmnjohcjknjogbjkelojhebldflphlknjmdnfpcepffkhgnmclnbheghfphfpmpmehhbdlohhmlenpbodlemmefbglngbbjpjpgobmaekofekmemohcmenpjefhnngjbjdpedfmkgbcolelinppdkjibmjmllgpdlebnchbfnlaoopbpjadegfmhhpmplhelheladkmoplmbgjjdnbfmikeomdpnhmnbbmpmmlhmgphmojnnkehglbpmjkeiljjlcejkbjnlheolfmhhhjfhijkdehfjlpcbemjghnlbfbppgefnnjgbjchpepokmknfbmhlbmbbolokdmmebfnjjaeblkbhhpabhlnofphmfbgpanppceokmkdoolfeainpbjldnfiinhmdpgbbgekjmonlfegonfnnejghdnmknodeembkgjojljehnljnbphelpdnjjomcplbdjfkphhfooanmmdcbplpffcennpmdgnplbhkhclpelbflgnbkpmfgemepikenhcefehjclhelncfnpnlhldfbnaekgahlfmgbjkapfobhhnlgdmplnolalndnobgnljhkfklonglnnloebohgnimnnmbjenjnmfkecbjkfnnncpmdlfnneegdhmpmgohjklfhhmpdepebjnppdokhnflnpkfeoddmonbojhjpleblmfmnhedppkaelknlmjlfbenglojbkemkjemlgffollplononglegcaomnffhflcahlhnfjnmlboloempoplfgempaboldlphhfhnnfdkpopabllihnlfnnclnofnkfjghjiebjdnnbjnmbepadmnjocmnpjpipbihopeeenhpnmkpjlkbglihelbmnhplpfnfilomldmjenaholnpolfkkdoknejelodffehhmppnhcllhaopelhfgknmenlnmbnlgllmlnlponlcomjmkhljpjlnjhbgemlphbalacbjanendonlobfpgmdhhpmcpmfbbhlfmnghkpobdbnjghgfjjhjjpegcmbjfkgffnpmlhnbmbbenejefhhhmhanklffmhbfnchoileolpjahjmfghmopnonkedbbenjkldjkmhgocbbambkglempmeendlmbmllkpfnjjebfinhbecemcmkgkajbbmhhhjhlmpklbgigmnbljbenfelghejknjbhklpjnpfmdnnpdldaonklhfnhlgpeidncgkelefennempdgnnnnpdmpnnofbemlnhohhojfddbjnmobojenonolgecphodmnglngngcphebnfjbnmnjpnldipmgbbkdnonmlleeibjkjkjddjlbdbonelbbghjojpdfgmgnnhhjllhdgncnmmhpjnmgndlpbfdejlfnlgdmhifnppnjcpjihmldhohhbebokbfnfadpmbaonlpllndodkgpfakofedleneeolajkdpgkdlldpmbflejbgkflfombbmpkjoohmompdodldpgdplokknlcmnlmgmongldcbmlkklohhfhhkomnjllbnjlhfnpokbkldnopkkejnjjemnlcdmhomhjmpkmhclohhmbomjpnonhklgoncenhblfbidnlnabehblilfophoknonfengkmojfojlkpgfbfapbchofpnohhdlapkbnpnljlhmnbkjancfpeidhejnilejhbmedbfkkkljcoepmaopckneljonloohlgjlkjmnplbcndgdhflfomjfjmnnfbgelohpbkdihnfajogbnlmhmbnegabhlmhohkjlkbfiljdbmehdbbphfgejlogbngnjhgomhlejmppgpedefnmkgpodpnhlklkngkbbejnholfpbpbpbgflgelhbglmnljhbjpbkbjmfeobelmlnmgjodebkghanmnfgkmollhphmhlemnjmnlecfhgehlhmnenlngmgmejdgilofennoompdogkmedlanakbhlmilennpfpbblgkjephohhocligjfimhfommgemgkdppgpljnjhpkflijlobanimopnmophklbleoandolnhphjiogkklljmnenfbeeelkpbpbjpompjencjojlpclghkjmklomnfoennflmpnkbjmmohmlopgdmhphnopkbjjljnfoeoogckkonpnngnojmndnlebhbeghlpjnfdikkhjneihbjnoopmfpojebonnbhfnnjkgfgebfgggebelecnkjoeglfpldleejngbfbbllbopengmbjpmlldgjbmjeholnldoneegbkmehddllehjkjkednmidnnollmnhjmnpdebkdlnknhjcnlfhllklolfnheplelfjlpfbnlajegdgnejhplogkglbpdcnfdpnohnhfmhnibngejfplokjijbfbioemlpfndeploemlgnippokbbhnjldhmkhmppfoegjognllgejgbllofhnpemkhfjdoebllnkppbbepohldldgmjcdfebjjlceeolccjbkjeocfdfoknklekgbldnldbndjdppnkcglepnhhpebhkomkelhdnmebelljgpknlndgnhomdfnnljnkknjcbgahpenlemneglbjdnkjpeponnlpfnepjkemiebhlppeklokndlbalmnlkdggdlmfoleljimlheeomebmkbebbpgjbdfnfljlohbokgbmfnmfmhlffkamgepomnmfnopknemmfoaceghfjjhnonmnlghnollhblbhbolmhpolngnmppkmnmnbidglfhdhebojnlgfogdememjglconfhbjhlbajlflimmfnfkogkhjklfgbmklckjinnfldddinklnnldnnlpmgedgclonkipblflclbhfhbnloldlnfhmkdhhnklmnjilegdahbkmpbglbnblbdhcdnehmjpnnejblbehppklhdomecldkgbbbgdfdpmkpbblofjmlppdfgdjahdbibjepfendgonbnhdnmdfennhhndgocfjnipokpeompflenmnnppodgfbfhkpebhfenpjbmegeojohegijoekkdofokbokojlnmgalpbdbpeellbfnefbmomjnepfacephonlbafpnlblfmjkdbllfcdhoobmonmlfeplekehnknjnlbdgobpbalnfjpdfhnnklolbaemmddlbjfkllnjlhmpfdpekkoddjbeboegllohbhoeloclfcnnohnjjnlnbknhpnkolghbomehepkcbkblpmlnneelldekkhokeodnkkoigloollgdldfjejlhebfnlajejolkgdljhegomajohoffbdfoobocloijhjjomnjgbbljlfhkipemhhkeleepophmmejljeeknbgjbhcgkenedkldglnllkflgnphbpgenbmjenobdpleoglcoohppglnmdlekkfmnplkdonbdnpnpgfoplleoigglingloclhdmfnbfeipnpnkhgnedleoononnmelmljnckedfpnedlfbnbjljoklfgknolinebemjlhmplfbjnnkolenkfbebljneepiiggdgbmaomgnneakegnldflpafpbnhgpnekeploalnjnminbhobjjmfkepeoghmngnedhjeplppghhipemmlhfgoednogblhghobhdbfkfljfmhabmnnnjkmakdfheknhhjlehhhopnnffnohdjmekhpelofpogfplgbedjnjcoaiggnmdhdncmpgofbfllkmponngecbbednnldlfclffbfclamhehenagnoddohomjnpjdbfllnkndnlgpmgjmamlpnchhlnmpooehhnobneljnbbdnmlillhmmfbbmdpdnoclgfnpgnmhmbjjfdmpdmhnmelnpdjjmpdhknlghfppifdmhmfneaomnbjccebnmmnepedllkepnnponjcbjjgldjllfpnekjlehhgcmkkdlagjmdmmlddhnlmlcanmeedopfhnmnoobhfljnklbofngjjpfnphjepnbpglhkllmgdjnhmnnmehhdnlhplmefcfnlpnbfojfhhdebgdhodllmlemjhbnpedhekkhbmeoekookjnehhegjomdefnbjllfhlffnjldkdhlddefkhmaklefbhngjgnneffodjdppkdhbfknfdfanjhkenjdnmjplbfeldknnmpjbellhkplpaekpjpdfopodnmdmdmphalemhkcmddlllnldbgfmkebjeelbleppdooodeganlpfennanebghfbfnlahephkhiomgfkpmjakkllbflfidekpdobpnneldhpfenenhoplnlaljfpdmnnpfmfgnbjbkbgpedingngndngolnlpnkinmfjlnaoekfdeknjjfgofiljgnbekngljbkalclddonlalnplkbefghmjcodoogfkfhlnepepflfbkfodeofpbefddmjpbodbgplglkebekjobhlkhaljjlhnnlighmfjpefeghpojfodblpelndonofdpgbmbjnpnldaegnblbnelhfoolmahhklnphjebpjpalhlfjmnhecjeljdfkmkmgllnnnbkfbdmamnolmlmhenfobcennjpndpobdhnlmejbnpcnpmnbchpeilffimbmgnfophlechhmfjninkmjnlpcgkhkoednpokkjibonboeffdpdehlhogljenfllkfhohbfdjlnmppjdellflgllhmemnonllneomibjfnmnlkembjolmfjplejhldedgghnhlfhlljbdmdlmnegdmjojpadoodfjpnnehdldmcekhebfhmeealpfmoiampkdnmfmngmhjjhnnomfflnnnlflfjnbbgeeiemkpkbklpjpdgaenjedljldjhbjejdfnlhndpjaocfkeneldjmkhiikdmlcgknbnbombjnmfogoeimoljmahabhoflnnlpopignmpdbhmppnddjjenjgnhnjboeehnkhljdjidbfnfjeebhphlnnpgnkpjcfbbnemillhcghffoejopmonlgmnilllnlnnflhjdnfjlkbknepdmjklebnlkhlmblcjdmeheflbldinnkkeocnjbmhlcdjpljegngppfmeehmlbkfpnpgblnpkfokhoeejfmegdlhamhegdjjnpedljjgjkkjnpdedegpejjnflmlpejhdleohjdmjjehlagpcfbhfcolppkcdojnoiehboolbcjgolnifhkflgommmkdpchkimpkojllombdmpfhhdlklbjjnniannnbhnlpnmnjicdpfdgdmnenoejpgbnbhgnhdpobnmldhinjpjpbhhpcpdkjclhnnphohpoidcanhlmgcolneebgpflollekmgkehmmffjoenfnhpipgbollhomoimbdgllfbbeganbecplbefkpjfnfljoimmbdelonbnbjdhkanbinbhfhpmhnhpbhdfneffknbmcoodlpndpflccnnnmnpiomhmghinpmnejhpnnedobpnejdinflloeenhkfbneenmpoofeekgdkojnjlmblfdlmgojkepadnedenhfdpekhnjlflmdlplhkeglogmfmlpblklpfemblkfgmpdnldlnjnmnihkemdlgfbdmhncfldhhjieenjnmkdnlchpnmmlbbipbndgpfnmjhlhgljhhlofbceejmhdnnhdejngekelppkfnpegmllmekbklkniolpblhgdembhbnonecmmbedlhpgpblojmngckegpfnphnlgjljblllnhbnbhmbdcpkkhfohhnmdfddnngenmenbnepojnonhhphhilnifogoljgnpecklbjmglgmjdjfgeobmnhbnhhbpmpjljphbbobljkpdjmndeogcjjnbaplpfecbpledepephkffjmjemmfldflonlnbjldjkfpbmkfdkmemojammjkdcjjokpjfmpmmlebhnlebhgneeogfnclemeebpofnafejnmelggofabbenknpjegeoaoloebdjhlljelmhgbniplnncgflkjmdldlnhnnmejnkoblnnedmonkjkojplgcdhfnbdkjjgpogfilmmleejhdeljehpokjfblhlhelohpeomppckpjlcofjnmlcpbdglekconlbnlkjnmeibalaemommhnbepbfgonldloghogpdjlnnmbcklajnbmlagnhhnhbolklndlbmlmdhdmlhodloonhnjlkmbdenegcfnfgjdcfjjjpkhcglanhbibeokghffeblfahldijnpleonmblpjhphkdcpblnlmmfnkljlmnpifedmflfgfopmjebnpmnlcjnepplcmmncjbpegjngfillophpgkkmfnkhhjdknknjndlopfbnejhbnokmbfegdejmhflgmlknneeeijgamlcnnnmnnboddohjemebeekjhplebbgfimpobdbmanficlmadeojnbopmappeolelnpodmhnmehoahngmnnmbonelpbnilhpmdpbmhddlljecmfgkjbobncobnflbnnfmndlcdbneophnbhdngknmilbbfbhlehlnbmljjnildghepbpjjplggfblpolfojomhldlblgglegoknldolkmfhlllbkdhlnnbjfjbpfmllifjlinnlappfjjjegmmlmgddofnfippfemnkjpblnllnldblollffelhonpnogpebepamclddlfekamnkfmkbnkmfeafomdjoogkkllcofppcndohbplhjeejdlgeplhibnhpnjlloddnlpfopnbhjkchjhekbfhnppnkkcppfdjgnodhdlpjlkclnjlhhggmbflnpolpnjflkcjpnkhnecehmknmmpehbohljbnpppjgeladkplglelnloemeampmjnnfnbpnlphndflldhhfffamplenllofoplflndmodjhghgbelpeflblcakelplnjkppeenemlgpgnnbollnecfklmeanmpklbjfjplnjhnpplmjpjpnbejlginenljldbenbgfgbgbgdbnpkhlblminlkfgljnnoahepdlodkggnllnpilcjhjempllienpplalfedlnnddmbgbjlgblpolookgndphfmdhmbofnnbicbnjgflndmblljipbnbllmgppfegkojlengeomnenghmlmjfenemnjbmmofemeokngnholbmgeefdbojmdhnejcfhmhhbpffjkjndoplmeaminopjemapokbnmljfkdjebeeclppplbgpglbfngmbdlegciaoljedelkphjegbnhlnhhhfdmeoongdnbmfhnclndehbbjljinlnfhfliohbmnpngbgbldjmhdcllnbnolplmdbapeeldjhmnphlcgmiomglfpgepdoehnpnhfnepbbnnmnmonjdflllnnmnebpfnpedpbgnboljnpenjcagojeklgndloapndiglpnooajpnljnhnlhmpgmfodlpkdfllghnopdfnpiofflfpdknllingnkpnealnhblbjoikllnfmgfdlnjelmlcbfeogobnlmljhbhgjjnbplmmginhlffbepehbpmnhopbdpookgnhgmfepblddclebnelokdmehnaphniaelhhlfhkmfpjedooepiihlmmjenlmpbmfnnnkgdnonjcfeoolkodlpeddcebbonkjoongkpnjbpnlkpcehcjfbmhnodhdlhengpnnbbpmghllmnlcdhfchnkldcbnnehhpkfgofbebnlnjbpolgkinbmnkojmhhobjlehmnmbpgmidkbpnojpgkpmiffbgnlpbnhndmlipbmbeelbkbldkllpfpglnhhobefdmdppljfoeginnnncfgikkgjfknnlmdejomiblfdgnbgmlannhljfnfjnhhmdgldkkmoinkbpckblnpbfojfnfnffplpklnpgklkefohejnjhenjfpbnndemmpllhkhnflbogohodjnfibhljijlbblkmekkjbndogjcbdbciophlnlpkbjhbdgnikklmdgfbddoglmcbkmcmehfjmimohgnbnkgilbgbeohghndchffpnckjoeoadhljbdknclcclcdlbmnnphhhgldhkpfkjhloahdbllloimfeefinhjhgkfenlpinhnfccdmnlolgelblbngibnpeolmblbegkdiegomfngdcelncbnljpopipnhghnnmloeflceonlacpbdldpbbncfmnjlbjnaednjnjkdllcenbelglncppndgcgdjnhfhmnddfnmmemaokclopekgakfhmkmiblobfnmbjmhlhgnlljfmldpnfnonnjmmjhkefjhffdimobnlkcapbjhmfknkpfplnphmkpnldgnpdbidcmiilnlnkaehkoodhofjnlcddahnfhnndpbfnodbgbffobeejngfhpmnebbhebbhmfhkbllmbggojeopelhonicepblinpgdfddgpjmjhejbpekbdobnaanpdldoljbilhhoemlnnjpgojlfndochlfnopojeillebhnelldlkjdjolkomfmfnkeclphenhblgkm'

    for c in a1:
        print(d[c])


import random
test_1() if random.random() > 0.5 else test_0()